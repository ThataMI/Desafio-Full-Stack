// <auto-generated />
using System;
using DesafioFullStack.backend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DesafioFullStack_Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230913185153_CreateTables")]
    partial class CreateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DesafioFullStack.backend.Models.Entities.Companies", b =>
                {
                    b.Property<Guid>("CompaniesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CompaniesId");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            CompaniesId = new Guid("a13c546e-0c15-4a1f-b522-09dcb6e5529f"),
                            Cep = "83514320",
                            Cnpj = "56269892000185",
                            Name = "Empresa1"
                        },
                        new
                        {
                            CompaniesId = new Guid("744fe497-d126-411a-a83a-031f31bd73f7"),
                            Cep = "05439010",
                            Cnpj = "54413724000196",
                            Name = "Empresa2"
                        },
                        new
                        {
                            CompaniesId = new Guid("d461d4d4-6d47-416c-9faf-bfc5786c1a22"),
                            Cep = "04089972",
                            Cnpj = "75782208000109",
                            Name = "Empresa3"
                        });
                });

            modelBuilder.Entity("DesafioFullStack.backend.Models.Entities.Suppliers", b =>
                {
                    b.Property<Guid>("SuppliersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CnpjCpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rg")
                        .HasColumnType("text");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SuppliersId");

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            SuppliersId = new Guid("41886c1d-402c-4425-979a-4fa18f5f1696"),
                            Birthday = new DateTime(2023, 9, 13, 15, 51, 53, 618, DateTimeKind.Local).AddTicks(8133),
                            Cep = "84910970",
                            CnpjCpf = "34994179018",
                            Email = "fornecedor1@gmail.com",
                            Name = "Fornecedor1",
                            Rg = "475169621",
                            Uf = "PR"
                        },
                        new
                        {
                            SuppliersId = new Guid("2eaf8ee9-7d3e-4dfb-a9d4-196421b2b29a"),
                            Birthday = new DateTime(2023, 9, 13, 15, 51, 53, 618, DateTimeKind.Local).AddTicks(8152),
                            Cep = "04176000",
                            CnpjCpf = "14090702046",
                            Email = "fornecedor2@hmail.com",
                            Name = "Fornecedor2",
                            Rg = "348235963",
                            Uf = "SP"
                        },
                        new
                        {
                            SuppliersId = new Guid("7d7bfc4c-f67e-4591-8ffe-bcadda6d4e17"),
                            Cep = "05545160",
                            CnpjCpf = "70357563000117",
                            Email = "fornecedor3@gmail.com",
                            Name = "Fornecedor3",
                            Uf = "SP"
                        });
                });

            modelBuilder.Entity("DesafioFullStack_Api.Models.Entities.CompanySupplier", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uuid");

                    b.HasKey("CompanyId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("CompaniesSuppliers");

                    b.HasData(
                        new
                        {
                            CompanyId = new Guid("a13c546e-0c15-4a1f-b522-09dcb6e5529f"),
                            SupplierId = new Guid("2eaf8ee9-7d3e-4dfb-a9d4-196421b2b29a")
                        },
                        new
                        {
                            CompanyId = new Guid("a13c546e-0c15-4a1f-b522-09dcb6e5529f"),
                            SupplierId = new Guid("7d7bfc4c-f67e-4591-8ffe-bcadda6d4e17")
                        },
                        new
                        {
                            CompanyId = new Guid("d461d4d4-6d47-416c-9faf-bfc5786c1a22"),
                            SupplierId = new Guid("41886c1d-402c-4425-979a-4fa18f5f1696")
                        });
                });

            modelBuilder.Entity("DesafioFullStack_Api.Models.Entities.CompanySupplier", b =>
                {
                    b.HasOne("DesafioFullStack.backend.Models.Entities.Companies", "Companies")
                        .WithMany("CompaniesSuppliers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioFullStack.backend.Models.Entities.Suppliers", "Suppliers")
                        .WithMany("CompaniesSuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("DesafioFullStack.backend.Models.Entities.Companies", b =>
                {
                    b.Navigation("CompaniesSuppliers");
                });

            modelBuilder.Entity("DesafioFullStack.backend.Models.Entities.Suppliers", b =>
                {
                    b.Navigation("CompaniesSuppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
