{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  id: \"company-table\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"company-table-heading\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", null, \"Nome:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Cnpj:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Cep:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Ações\")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  id: \"company-table-rows\"\n};\nconst _hoisted_4 = {\n  class: \"order-number\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.companies, company => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"company-table-row\",\n      key: company.id\n    }, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString(company.id), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", null, _toDisplayString(_ctx.company.nome), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(_ctx.company.cnpj), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(_ctx.company.cep), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","companies","company","key","_hoisted_4","_toDisplayString","_ctx","nome","cnpj","cep"],"sources":["C:\\Users\\Thata\\OneDrive\\Área de Trabalho\\DesafioAccenture\\desafiofullstack-app\\src\\components\\CompanyTable.vue"],"sourcesContent":["<template>\r\n  <div id=\"company-table\">\r\n    <div id=\"company-table-heading\">\r\n      <div>Nome:</div>\r\n      <div>Cnpj:</div>\r\n      <div>Cep:</div>\r\n      <div>Ações</div>\r\n    </div>\r\n    <div id=\"company-table-rows\">\r\n      <div\r\n        class=\"company-table-row\"\r\n        v-for=\"company in companies\"\r\n        :key=\"company.id\"\r\n      >\r\n        <div class=\"order-number\">{{ company.id }}</div>\r\n      </div>\r\n      <div>\r\n        {{ company.nome }}\r\n      </div>\r\n      <div>\r\n        {{ company.cnpj }}\r\n      </div>\r\n      <div>\r\n        {{ company.cep }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"CompanyTable\",\r\n\r\n  data() {\r\n    return {\r\n      companies: [],\r\n    };\r\n  },\r\n  methods: {\r\n    getCompanies() {\r\n      axios\r\n        .get(\"https://localhost:7237/api/companies/Get\")\r\n        .then((res) => {\r\n          console.log(res);\r\n          this.companies = res.data;\r\n        })\r\n        .catch(function (error) {\r\n          console.error(error);\r\n        });\r\n    },\r\n  },\r\n  created() {\r\n    this.getCompanies();\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":";;EACOA,EAAE,EAAC;AAAe;gCACrBC,mBAAA,CAKM;EALDD,EAAE,EAAC;AAAuB,I,aAC7BC,mBAAA,CAAgB,aAAX,OAAK,G,aACVA,mBAAA,CAAgB,aAAX,OAAK,G,aACVA,mBAAA,CAAe,aAAV,MAAI,G,aACTA,mBAAA,CAAgB,aAAX,OAAK,E;;EAEPD,EAAE,EAAC;AAAoB;;EAMnBE,KAAK,EAAC;AAAc;;uBAb/BC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,UAKM,EACNJ,mBAAA,CAiBM,OAjBNK,UAiBM,I,kBAhBJH,mBAAA,CAMMI,SAAA,QAAAC,WAAA,CAJcC,KAAA,CAAAC,SAAS,EAApBC,OAAO;yBAFhBR,mBAAA,CAMM;MALJD,KAAK,EAAC,mBAAmB;MAExBU,GAAG,EAAED,OAAO,CAACX;QAEdC,mBAAA,CAAgD,OAAhDY,UAAgD,EAAAC,gBAAA,CAAnBH,OAAO,CAACX,EAAE,iB;kCAEzCC,mBAAA,CAEM,aAAAa,gBAAA,CADDC,IAAA,CAAAJ,OAAO,CAACK,IAAI,kBAEjBf,mBAAA,CAEM,aAAAa,gBAAA,CADDC,IAAA,CAAAJ,OAAO,CAACM,IAAI,kBAEjBhB,mBAAA,CAEM,aAAAa,gBAAA,CADDC,IAAA,CAAAJ,OAAO,CAACO,GAAG,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}