{"ast":null,"code":"import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementVNode as _createElementVNode, vModelText as _vModelText, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-236b1c61\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"input-container-company\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"Nome da empresa:\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"input-container-company\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"cpnj\"\n}, \"CPNJ:\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"input-container-company\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"cep\"\n}, \"Cep:\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input-container-company\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"submit-btn\",\n  type: \"submit\",\n  value: \"Cadastrar Empresa\"\n})], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache) {\n  const _component_Message = _resolveComponent(\"Message\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createVNode(_component_Message, {\n    msg: _ctx.msg\n  }, null, 8 /* PROPS */, [\"msg\"]), [[_vShow, _ctx.msg]]), _createElementVNode(\"div\", null, [_createElementVNode(\"form\", {\n    id: \"company-form\",\n    method: \"POST\",\n    onSubmit: _cache[3] || (_cache[3] = (...args) => _ctx.onSubmit && _ctx.onSubmit(...args))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.name = $event),\n    placeholder: \"Digite o nome da empresa\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.name]])]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    id: \"cpnj\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.cpnj = $event),\n    placeholder: \"Digite o cpnj da empresa\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.cpnj]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    id: \"cep\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.cep = $event),\n    placeholder: \"Digite o cep da empresa\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.cep]])]), _hoisted_7], 32 /* HYDRATE_EVENTS */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","value","_createVNode","_component_Message","msg","_ctx","id","method","onSubmit","_cache","args","_hoisted_1","_hoisted_2","name","$event","placeholder","_hoisted_3","_hoisted_4","cpnj","_hoisted_5","_hoisted_6","cep","_hoisted_7"],"sources":["C:\\Users\\Thata\\OneDrive\\√Årea de Trabalho\\DesafioAccenture\\desafiofullstack-app\\src\\components\\CompanyForm.vue"],"sourcesContent":["<template>\r\n  <Message :msg=\"msg\" v-show=\"msg\" />\r\n  <div>\r\n    <form id=\"company-form\" method=\"POST\" @submit=\"onSubmit\">\r\n      <div class=\"input-container-company\">\r\n        <label for=\"name\">Nome da empresa:</label>\r\n        <input\r\n          id=\"name\"\r\n          v-model=\"name\"\r\n          placeholder=\"Digite o nome da empresa\"\r\n        />\r\n      </div>\r\n      <div class=\"input-container-company\">\r\n        <label for=\"cpnj\">CPNJ:</label>\r\n        <input\r\n          id=\"cpnj\"\r\n          v-model=\"cpnj\"\r\n          placeholder=\"Digite o cpnj da empresa\"\r\n        />\r\n      </div>\r\n      <div class=\"input-container-company\">\r\n        <label for=\"cep\">Cep:</label>\r\n        <input id=\"cep\" v-model=\"cep\" placeholder=\"Digite o cep da empresa\" />\r\n      </div>\r\n      <div class=\"input-container-company\">\r\n        <input class=\"submit-btn\" type=\"submit\" value=\"Cadastrar Empresa\" />\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"CompanyForm\",\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      cnpj: \"\",\r\n      cep: \"\",\r\n      msg: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    // checkCep: async function () {\r\n    //   if (this.cep.length != 8) {\r\n    //     alert(\"CEP Invalido!\");\r\n    //   } else {\r\n    //     try {\r\n    //       const url = `http://cep.la/${this.cep}`;\r\n    //       const xhr = new XMLHttpRequest();\r\n    //       let address = {};\r\n    //       xhr.open(\"GET\", url, true);\r\n    //       xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    //       xhr.onload = () => {\r\n    //         address = JSON.parse(xhr.response);\r\n    //         this.data = address;\r\n    //       };\r\n    //       xhr.send(null);\r\n    //     } catch (e) {\r\n    //       console.log(e);\r\n    //     }\r\n    //   }\r\n    // },\r\n     Onsubmit() {\r\n        axios.post(\"https://localhost:7237/api/Companies/Post\",  this.cnpj, this.name,  this.cep,)\r\n        .then(() => {\r\n            router.replace({ path: '/company/register' })\r\n          })\r\n      };\r\n      await fetch(\"https://localhost:7237/api/Companies/Post\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json; charset=UTF-8\" },\r\n        body: JSON.stringify(_data),\r\n      })\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#company-form {\r\n  max-width: 200px;\r\n  margin: 0 auto;\r\n  margin-left: 500px;\r\n}\r\n\r\n.input-container-company {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n  color: #222;\r\n  padding: 5px 10px;\r\n  border-left: 4px solid #987bad;\r\n}\r\n\r\ninput {\r\n  padding: 5px 10px;\r\n  width: 300px;\r\n}\r\n\r\n.submit-btn {\r\n  background-color: #222;\r\n  color: #987bad;\r\n  font-weight: bold;\r\n  border: 2px solid #222;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  margin: 0 auto;\r\n  cursor: pointer;\r\n  transition: 0.5s;\r\n}\r\n\r\n.submit-btn:hover {\r\n  background-color: transparent;\r\n  color: #222;\r\n}\r\n</style>\r\n"],"mappings":";;;EAIWA,KAAK,EAAC;AAAyB;gEAClCC,mBAAA,CAA0C;EAAnCC,GAAG,EAAC;AAAM,GAAC,kBAAgB;;EAO/BF,KAAK,EAAC;AAAyB;gEAClCC,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAM,GAAC,OAAK;;EAOpBF,KAAK,EAAC;AAAyB;gEAClCC,mBAAA,CAA6B;EAAtBC,GAAG,EAAC;AAAK,GAAC,MAAI;gEAGvBD,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAyB,I,aAClCC,mBAAA,CAAoE;EAA7DD,KAAK,EAAC,YAAY;EAACG,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;;;;;6EAxBpDC,YAAA,CAAmCC,kBAAA;IAAzBC,GAAG,EAAEC,IAAA,CAAAD;EAAG,mC,SAAUC,IAAA,CAAAD,GAAG,E,GAC/BN,mBAAA,CA0BM,cAzBJA,mBAAA,CAwBO;IAxBDQ,EAAE,EAAC,cAAc;IAACC,MAAM,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,IAAA,CAAAG,QAAA,IAAAH,IAAA,CAAAG,QAAA,IAAAE,IAAA,CAAQ;MACrDZ,mBAAA,CAOM,OAPNa,UAOM,GANJC,UAA0C,E,gBAC1Cd,mBAAA,CAIE;IAHAQ,EAAE,EAAC,MAAM;+DACAD,IAAA,CAAAQ,IAAI,GAAAC,MAAA;IACbC,WAAW,EAAC;iDADHV,IAAA,CAAAQ,IAAI,E,KAIjBf,mBAAA,CAOM,OAPNkB,UAOM,GANJC,UAA+B,E,gBAC/BnB,mBAAA,CAIE;IAHAQ,EAAE,EAAC,MAAM;+DACAD,IAAA,CAAAa,IAAI,GAAAJ,MAAA;IACbC,WAAW,EAAC;iDADHV,IAAA,CAAAa,IAAI,E,KAIjBpB,mBAAA,CAGM,OAHNqB,UAGM,GAFJC,UAA6B,E,gBAC7BtB,mBAAA,CAAsE;IAA/DQ,EAAE,EAAC,KAAK;+DAAUD,IAAA,CAAAgB,GAAG,GAAAP,MAAA;IAAEC,WAAW,EAAC;iDAAjBV,IAAA,CAAAgB,GAAG,E,KAE9BC,UAEM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}