{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-236b1c61\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"input-container-company\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"nome\"\n}, \"Nome da empresa:\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"input-container-company\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"cpnj\"\n}, \"CPNJ:\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"input-container-company\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"cep\"\n}, \"Cep:\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input-container-company\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"submit-btn\",\n  type: \"submit\",\n  value: \"Cadastrar Empresa\"\n})], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <Message :msg=\\\"msg\\\" v-show=\\\"msg\\\" /> \"), _createElementVNode(\"div\", null, [_createElementVNode(\"form\", {\n    id: \"company-form\",\n    method: \"POST\",\n    onSubmit: _cache[3] || (_cache[3] = (...args) => $options.createBurger && $options.createBurger(...args))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    id: \"companyName\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.nome = $event),\n    placeholder: \"Digite o nome da empresa\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.nome]])]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    id: \"cpnj\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.cpnj = $event),\n    placeholder: \"Digite o cpnj da empresa\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.cpnj]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    id: \"cep\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.cep = $event),\n    placeholder: \"Digite o cep da empresa\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.cep]])]), _hoisted_7], 32 /* HYDRATE_EVENTS */)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","value","_createCommentVNode","id","method","onSubmit","_cache","args","$options","createBurger","_hoisted_1","_hoisted_2","$data","nome","$event","placeholder","_hoisted_3","_hoisted_4","cpnj","_hoisted_5","_hoisted_6","cep","_hoisted_7"],"sources":["C:\\Users\\Thata\\OneDrive\\√Årea de Trabalho\\DesafioAccenture\\desafiofullstack-app\\src\\components\\CompanyForm.vue"],"sourcesContent":["<template>\r\n  <!-- <Message :msg=\"msg\" v-show=\"msg\" /> -->\r\n  <div>\r\n    <form id=\"company-form\" method=\"POST\" @submit=\"createBurger\">\r\n      <div class=\"input-container-company\">\r\n        <label for=\"nome\">Nome da empresa:</label>\r\n        <input\r\n          id=\"companyName\"\r\n          v-model=\"nome\"\r\n          placeholder=\"Digite o nome da empresa\"\r\n        />\r\n      </div>\r\n      <div class=\"input-container-company\">\r\n        <label for=\"cpnj\">CPNJ:</label>\r\n        <input\r\n          id=\"cpnj\"\r\n          v-model=\"cpnj\"\r\n          placeholder=\"Digite o cpnj da empresa\"\r\n        />\r\n      </div>\r\n      <div class=\"input-container-company\">\r\n        <label for=\"cep\">Cep:</label>\r\n        <input id=\"cep\" v-model=\"cep\" placeholder=\"Digite o cep da empresa\" />\r\n      </div>\r\n      <div class=\"input-container-company\">\r\n        <input class=\"submit-btn\" type=\"submit\" value=\"Cadastrar Empresa\" />\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CompanyForm\",\r\n  data() {\r\n    return {\r\n      nome: null,\r\n      cpnj: null,\r\n      cep: null,\r\n      //msg: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async getIngredientes() {\r\n      const req = await fetch(\"http://localhost:3000/ingredientes\");\r\n      const data = await req.json();\r\n\r\n      this.paes = data.paes;\r\n      this.carnes = data.carnes;\r\n      this.opcionaisdata = data.opcionais;\r\n    },\r\n    async createBurger(e) {\r\n      e.preventDefault();\r\n\r\n      const data = {\r\n        nome: this.nome,\r\n        carne: this.carne,\r\n        pao: this.pao,\r\n        opcionais: Array.from(this.opcionais),\r\n        status: \"Solicitado\",\r\n      };\r\n\r\n      const dataJson = JSON.stringify(data);\r\n\r\n      const req = await fetch(\"http://localhost:3000/burgers\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: dataJson,\r\n      });\r\n\r\n      const res = await req.json();\r\n\r\n      console.log(res);\r\n\r\n      this.msg = \"Pedido realizado com sucesso!\";\r\n\r\n      // clear message\r\n      setTimeout(() => (this.msg = \"\"), 3000);\r\n\r\n      // limpar campos\r\n      this.nome = \"\";\r\n      this.carne = \"\";\r\n      this.pao = \"\";\r\n      this.opcionais = [];\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getIngredientes();\r\n  },\r\n  components: {\r\n    Message,\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#company-form {\r\n  max-width: 200px;\r\n  margin: 0 auto;\r\n  margin-left: 500px;\r\n}\r\n\r\n.input-container-company {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  font-weight: bold;\r\n  margin-bottom: 15px;\r\n  color: #222;\r\n  padding: 5px 10px;\r\n  border-left: 4px solid #987bad;\r\n}\r\n\r\ninput {\r\n  padding: 5px 10px;\r\n  width: 300px;\r\n}\r\n\r\n.submit-btn {\r\n  background-color: #222;\r\n  color: #987bad;\r\n  font-weight: bold;\r\n  border: 2px solid #222;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  margin: 0 auto;\r\n  cursor: pointer;\r\n  transition: 0.5s;\r\n}\r\n\r\n.submit-btn:hover {\r\n  background-color: transparent;\r\n  color: #222;\r\n}\r\n</style>\r\n"],"mappings":";;;EAIWA,KAAK,EAAC;AAAyB;gEAClCC,mBAAA,CAA0C;EAAnCC,GAAG,EAAC;AAAM,GAAC,kBAAgB;;EAO/BF,KAAK,EAAC;AAAyB;gEAClCC,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAM,GAAC,OAAK;;EAOpBF,KAAK,EAAC;AAAyB;gEAClCC,mBAAA,CAA6B;EAAtBC,GAAG,EAAC;AAAK,GAAC,MAAI;gEAGvBD,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAyB,I,aAClCC,mBAAA,CAAoE;EAA7DD,KAAK,EAAC,YAAY;EAACG,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;;;;6DAxBpDC,mBAAA,6CAA4C,EAC5CJ,mBAAA,CA0BM,cAzBJA,mBAAA,CAwBO;IAxBDK,EAAE,EAAC,cAAc;IAACC,MAAM,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MACzDT,mBAAA,CAOM,OAPNY,UAOM,GANJC,UAA0C,E,gBAC1Cb,mBAAA,CAIE;IAHAK,EAAE,EAAC,aAAa;+DACPS,KAAA,CAAAC,IAAI,GAAAC,MAAA;IACbC,WAAW,EAAC;iDADHH,KAAA,CAAAC,IAAI,E,KAIjBf,mBAAA,CAOM,OAPNkB,UAOM,GANJC,UAA+B,E,gBAC/BnB,mBAAA,CAIE;IAHAK,EAAE,EAAC,MAAM;+DACAS,KAAA,CAAAM,IAAI,GAAAJ,MAAA;IACbC,WAAW,EAAC;iDADHH,KAAA,CAAAM,IAAI,E,KAIjBpB,mBAAA,CAGM,OAHNqB,UAGM,GAFJC,UAA6B,E,gBAC7BtB,mBAAA,CAAsE;IAA/DK,EAAE,EAAC,KAAK;+DAAUS,KAAA,CAAAS,GAAG,GAAAP,MAAA;IAAEC,WAAW,EAAC;iDAAjBH,KAAA,CAAAS,GAAG,E,KAE9BC,UAEM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}